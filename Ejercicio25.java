/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoparcial;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author alexi
 */
public class Ejercicio25 extends javax.swing.JPanel {

    /**
     * Creates new form Ejercicio25
     */
    public Ejercicio25() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla1 = new javax.swing.JTable();
        btnAñadir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        Tabla1.setBackground(new java.awt.Color(204, 255, 255));
        Tabla1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "P1", "P2", "CF", "ER", "Nota Def.", "Estado Aprobado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Tabla1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla1);

        btnAñadir.setBackground(new java.awt.Color(255, 255, 204));
        btnAñadir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAñadir.setText("Añadir Estudiantes");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        Tabla2.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        Tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Aprobado", "0", "0"},
                {"Reprobado", "0", "0"},
                {"Total", "0", "0"}
            },
            new String [] {
                "Estado Aprobatorio", "Cantidad", "%"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabla2);

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("25. Ingresar de un conjunto de N estudiantes, Determinar el estado aprobatorio si ND es mayor o igual a 7 es “Aprobado” caso contrario es “Reprobado”.");
        jLabel1.setOpaque(true);

        jButton3.setBackground(new java.awt.Color(255, 255, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Nuevo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(68, 68, 68)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(716, 716, 716))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Tabla1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tabla1KeyReleased
        DefaultTableModel modelo = (DefaultTableModel) Tabla1.getModel();
        DefaultTableModel modeloEstado = (DefaultTableModel) Tabla2.getModel();

        try {
            int files = modelo.getRowCount();
            int aprobados = 0;
            int reprobados = 0;

            for (int f = 0; f < files; f++) {
                double p1 = Double.parseDouble(modelo.getValueAt(f, 1).toString().replace(",","."));
                double p2 = Double.parseDouble(modelo.getValueAt(f, 2).toString().replace(",","."));
                double cf = (p1 + p2) / 2;
                modelo.setValueAt(cf, f, 3);

                if (cf >= 7) {
                    modelo.setValueAt(String.format("%.2f", cf), f, 5);
                    modelo.setValueAt("Aprobado", f, 6);
                    aprobados++;
                } else if (cf <= 5.5) {
                    modelo.setValueAt(String.format("%.2f", cf), f, 5);
                    modelo.setValueAt("Reprobado", f, 6);
                    reprobados++;
                } else if (cf > 5.5 && cf < 7) {
                    double cr = Double.parseDouble(modelo.getValueAt(f, 4).toString());
                    modelo.setValueAt(cf, f, 4);
                    double nder = (cf * 0.4) + (cr * 0.6);

                    if (nder > 7) {
                        modelo.setValueAt(String.format("%.2f", nder), f, 5);
                        modelo.setValueAt("Aprobado", f, 6);
                        aprobados++;
                    } else {
                        modelo.setValueAt(String.format("%.2f", nder), f, 5);
                        modelo.setValueAt("Reprobado", f, 6);
                        reprobados++;
                    }
                }
            }
            // Actualizar la tabla de estado aprobatorio
            int total = aprobados + reprobados;

            Tabla2.setValueAt("" + aprobados, 0, 1);
            double paprobados = total > 0 ? ((double) aprobados / total) * 100 : 0;
            Tabla2.setValueAt(String.format("%.2f%%", paprobados), 0, 2);

            Tabla2.setValueAt("" + reprobados, 1, 1);
            double preprobados = total > 0 ? ((double) reprobados / total) * 100 : 0;
            Tabla2.setValueAt(String.format("%.2f%%", preprobados), 1, 2);

            Tabla2.setValueAt("" + total, 2, 1);
            Tabla2.setValueAt("100.00%", 2, 2);

        } catch (Exception ex) {
        }

    }//GEN-LAST:event_Tabla1KeyReleased

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        DefaultTableModel modelo = (DefaultTableModel)Tabla1.getModel();
        try{
            int N = modelo.getRowCount();
            modelo.setRowCount(++N);
            for (int i=1;i<=N;i++)
            modelo.setValueAt("" + i, i-1, 0);
        }
        catch (Exception ex){}
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            Tabla2.setValueAt(0,0, 1);
            Tabla2.setValueAt(0,0, 2);
            Tabla2.setValueAt(0,1, 1);
            Tabla2.setValueAt(0,1, 2);
            Tabla2.setValueAt(0,2, 1);
            Tabla2.setValueAt(0,2, 2);

        }
        catch(Exception ex){
        }
        DefaultTableModel model = (DefaultTableModel) Tabla1.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) Tabla1.getModel();
        DefaultTableModel modeloEstado = (DefaultTableModel) Tabla2.getModel();

        try {
            int files = modelo.getRowCount();
            int aprobados = 0;
            int reprobados = 0;

            for (int f = 0; f < files; f++) {
                double p1 = Double.parseDouble(modelo.getValueAt(f, 1).toString().replace(",","."));
                double p2 = Double.parseDouble(modelo.getValueAt(f, 2).toString().replace(",","."));
                double cf = (p1 + p2) / 2;
                modelo.setValueAt(cf, f, 3);

                if (cf >= 7) {
                    modelo.setValueAt(String.format("%.2f", cf), f, 5);
                    modelo.setValueAt("Aprobado", f, 6);
                    aprobados++;
                } else if (cf <= 5.5) {
                    modelo.setValueAt(String.format("%.2f", cf), f, 5);
                    modelo.setValueAt("Reprobado", f, 6);
                    reprobados++;
                } else if (cf > 5.5 && cf < 7) {
                    double cr = Double.parseDouble(modelo.getValueAt(f, 4).toString());
                    modelo.setValueAt(cf, f, 4);
                    double nder = (cf * 0.4) + (cr * 0.6);

                    if (nder > 7) {
                        modelo.setValueAt(String.format("%.2f", nder), f, 5);
                        modelo.setValueAt("Aprobado", f, 6);
                        aprobados++;
                    } else {
                        modelo.setValueAt(String.format("%.2f", nder), f, 5);
                        modelo.setValueAt("Reprobado", f, 6);
                        reprobados++;
                    }
                }
            }

            // Actualizar la tabla de estado aprobatorio
            int total = aprobados + reprobados;

            Tabla2.setValueAt("" + aprobados, 0, 1);
            double paprobados = total > 0 ? ((double) aprobados / total) * 100 : 0;
            Tabla2.setValueAt(String.format("%.2f%%", paprobados), 0, 2);

            Tabla2.setValueAt("" + reprobados, 1, 1);
            double preprobados = total > 0 ? ((double) reprobados / total) * 100 : 0;
            Tabla2.setValueAt(String.format("%.2f%%", preprobados), 1, 2);

            Tabla2.setValueAt("" + total, 2, 1);
            Tabla2.setValueAt("100.00%", 2, 2);

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla1;
    private javax.swing.JTable Tabla2;
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
