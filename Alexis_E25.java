/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Laboratorio;


import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ikercito
 */
public class Alexis_E25 extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Alexis_E25.class.getName());

    /**
     * Creates new form NewJFrame
     */
    public Alexis_E25() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        btnAñadir = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Numero de Estudiantes:");

        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "P1", "P2", "CF", "ER", "Nota Def.", "Estado Aprobado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Table1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table1);

        btnAñadir.setText("Añadir Estudiantes");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        Tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Aprobado", "0", "0"},
                {"Reprobado", "0", "0"},
                {"Total", "0", "0"}
            },
            new String [] {
                "Estado Aprobatorio", "Cantidad", "%"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabla2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAñadir)
                        .addGap(18, 18, 18)
                        .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnAñadir)
                    .addComponent(btnCalcular))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        DefaultTableModel modelo = (DefaultTableModel)Table1.getModel();
        try{
        int N = modelo.getRowCount();
        modelo.setRowCount(++N);
        for (int i=1;i<=N;i++)
        modelo.setValueAt("" + i, i-1, 0);
        }
        catch (Exception ex){}
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void Table1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table1KeyReleased
        DefaultTableModel modelo = (DefaultTableModel) Table1.getModel();
    DefaultTableModel modeloEstado = (DefaultTableModel) Tabla2.getModel();
    
    try {
        int files = modelo.getRowCount();
        int aprobados = 0;
        int reprobados = 0;
        
        for (int f = 0; f < files; f++) {
            double p1 = Double.parseDouble(modelo.getValueAt(f, 1).toString().replace(",","."));
            double p2 = Double.parseDouble(modelo.getValueAt(f, 2).toString().replace(",","."));
            double cf = (p1 + p2) / 2;
            modelo.setValueAt(cf, f, 3);
            
            if (cf >= 7) {
                modelo.setValueAt(String.format("%.2f", cf), f, 5);
                modelo.setValueAt("Aprobado", f, 6);
                aprobados++;
            } else if (cf <= 5.5) {
                modelo.setValueAt(String.format("%.2f", cf), f, 5);
                modelo.setValueAt("Reprobado", f, 6);
                reprobados++;
            } else if (cf > 5.5 && cf < 7) {
                double cr = Double.parseDouble(modelo.getValueAt(f, 4).toString());
                modelo.setValueAt(cf, f, 4);
                double nder = (cf * 0.4) + (cr * 0.6);
                
                if (nder > 7) {
                    modelo.setValueAt(String.format("%.2f", nder), f, 5);
                    modelo.setValueAt("Aprobado", f, 6);
                    aprobados++;
                } else {
                    modelo.setValueAt(String.format("%.2f", nder), f, 5);
                    modelo.setValueAt("Reprobado", f, 6);
                    reprobados++;
                }
            }
        }
        
        // Actualizar la tabla de estado aprobatorio
        int total = aprobados + reprobados;
        
        Tabla2.setValueAt("" + aprobados, 0, 1);
        double paprobados = total > 0 ? ((double) aprobados / total) * 100 : 0;
        Tabla2.setValueAt(String.format("%.2f%%", paprobados), 0, 2);

        Tabla2.setValueAt("" + reprobados, 1, 1);
        double preprobados = total > 0 ? ((double) reprobados / total) * 100 : 0;
        Tabla2.setValueAt(String.format("%.2f%%", preprobados), 1, 2);

        Tabla2.setValueAt("" + total, 2, 1);
        Tabla2.setValueAt("100.00%", 2, 2);

    } catch (Exception ex) {
    }
           
    }//GEN-LAST:event_Table1KeyReleased

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        
        

    }//GEN-LAST:event_btnCalcularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Alexis_E25().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla2;
    private javax.swing.JTable Table1;
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
